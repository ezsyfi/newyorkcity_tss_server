name: Cargo Build & Test

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]
  workflow_dispatch:
    branches: [dev]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - nightly
    steps:
      - uses: actions/checkout@v3
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: rustup component add rustfmt

      - name: Docker Login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run:
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: CI
        env:
          IMAGE_NAME: newyork_city
          HCMC_HOST: ${{secrets.HCMC_HOST}}
          HCMC_PORT: ${{secrets.HCMC_PORT}}
          TEST_EMAIL: ${{secrets.TEST_EMAIL}}
          TEST_PASS: ${{secrets.TEST_PASS}}
          TEST_SIGNIN_URL: ${{secrets.TEST_SIGNIN_URL}}

        run: |
          cd ./newyork-server
          touch env.staging.toml
          echo HCMC_HOST="$HCMC_HOST" >> env.staging.toml
          echo HCMC_PORT="$HCMC_PORT" >> env.staging.toml
          cat env.staging.toml
          touch env.test.toml
          echo TEST_EMAIL="$TEST_EMAIL" >> env.test.toml
          echo TEST_PASS="$TEST_PASS" >> env.test.toml
          echo TEST_SIGNIN_URL="$TEST_SIGNIN_URL" >> env.test.toml
          cat env.test.toml
          cargo fmt
          cargo test --verbose
          docker build -t $IMAGE_NAME .
          docker tag $IMAGE_NAME:latest ${{secrets.DOCKER_USER}}/$IMAGE_NAME:latest
          docker push ${{secrets.DOCKER_USER}}/$IMAGE_NAME
